buildscript {
	ext {
		springBootVersion = '2.2.0.BUILD-SNAPSHOT'
		wrapperVersion = '1.0.17.RELEASE'
		shadowVersion = '5.1.0'
	}
	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
		classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'io.spring.sample'
version = '2.0.0.RELEASE'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

ext {
	springCloudFunctionVersion = "3.0.2.RELEASE"
	awsLambdaEventsVersion = "2.0.2"
	awsLambdaCoreVersion = "1.1.0"
}
ext['reactor.version'] = "3.1.7.RELEASE"

assemble.dependsOn = [shadowJar, thinJar]

jar {
	manifest {
		attributes 'Main-Class': 'com.appgate.substr.SubStrApplication'
	}
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*

shadowJar {
	classifier = 'aws'
	dependencies {
		exclude(
				dependency("org.springframework.cloud:spring-cloud-function-web:${springCloudFunctionVersion}"))
	}
	// Required for Spring
	mergeServiceFiles()
	append 'META-INF/spring.handlers'
	append 'META-INF/spring.schemas'
	append 'META-INF/spring.tooling'
	transform(PropertiesFileTransformer) {
		paths = ['META-INF/spring.factories']
		mergeStrategy = "append"
	}
}

configurations {
	testCompile.extendsFrom(compileOnly)
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-function-dependencies:${springCloudFunctionVersion}"
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}


test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}
dependencies {

	implementation("com.amazonaws:aws-java-sdk-dynamodb:1.11.509")
	implementation group: 'org.mockito', name: 'mockito-core', version: "1.10.19"
	compile group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
	compile ("org.springframework.cloud:spring-cloud-function-adapter-aws:3.0.11.RELEASE")


	compile group: 'org.springframework', name: 'spring-tx', version: '5.2.5.RELEASE'
	compile ("commons-collections:commons-collections:3.2.2") {
		force = true
	}
	compile ("com.google.guava:guava:25.0-jre"){
		force = true
	}
	compile ("com.sun.mail:javax.mail:1.5.5"){
		force = true
	}
	compile ("org.cryptacular:cryptacular:1.2.4")
	compile ("org.springframework:spring-webmvc:5.0.7.RELEASE"){
		force = true
	}
	compile ("org.apache.santuario:xmlsec:2.1.4"){
		exclude group: 'commons-codec', module: 'commons-codec'
		force = true
	}
	compile ("com.fasterxml.woodstox:woodstox-core:5.3.0"){
		force = true
	}
	compile("com.amazonaws:aws-lambda-java-events:2.2.6")
			{
				force = true
			}
	compile("com.amazonaws:aws-lambda-java-core:1.2.0")
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	testImplementation 'junit:junit:4.12'

	testCompileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'


	compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.4.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.3.5.RELEASE'



}